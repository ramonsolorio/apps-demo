name: Check the presence of this key

on:
  # push:
  #   branches:
  #     - puneeth
  workflow_dispatch:

env:
  ENVIRONMENT: ${{ github.ref == 'refs/heads/main' && 'PROD' || github.ref == 'refs/heads/staging' && 'QA' || 'DEV' }}

jobs:
  check-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Check required secrets and variables
        run: |
          missing_items=()

          # Check secrets
          if [[ -z "${{ secrets[format('{0}_AZURE_FUNCTIONAPP_PUBLISH_PROFILE', env.ENVIRONMENT)] }}" ]]; then
            missing_items+=("${{ env.ENVIRONMENT }}_AZURE_FUNCTIONAPP_PUBLISH_PROFILE (secret)")
          fi

          if [[ -z "${{ secrets[format('{0}_LOGIC_APP_PUBLISH_PROFILE', env.ENVIRONMENT)] }}" ]]; then
            missing_items+=("${{ env.ENVIRONMENT }}_LOGIC_APP_PUBLISH_PROFILE (secret)")
          fi

          if [[ -z "${{ secrets[format('{0}_AZURE_SQL_CONNECTION_STRING_CLOUD', env.ENVIRONMENT)] }}" ]]; then
            missing_items+=("${{ env.ENVIRONMENT }}_AZURE_SQL_CONNECTION_STRING_CLOUD (secret)")
          fi

          if [[ -z "${{ secrets[format('{0}_AZURE_SQL_CONNECTION_STRING_MOCK', env.ENVIRONMENT)] }}" ]]; then
            missing_items+=("${{ env.ENVIRONMENT }}_AZURE_SQL_CONNECTION_STRING_MOCK (secret)")
          fi

          # Check variables
          if [[ -z "${{ vars[format('{0}_FUNCTION_APP_NAME', env.ENVIRONMENT)] }}" ]]; then
            missing_items+=("${{ env.ENVIRONMENT }}_FUNCTION_APP_NAME (variable)")
          fi

          if [[ -z "${{ vars[format('{0}_LOGIC_APP_NAME', env.ENVIRONMENT)] }}" ]]; then
            missing_items+=("${{ env.ENVIRONMENT }}_LOGIC_APP_NAME (variable)")
          fi

          # If any items are missing, fail the workflow
          if [ ${#missing_items[@]} -ne 0 ]; then
            echo "❌ The following required secrets/variables are missing:"
            printf '%s\n' "${missing_items[@]}"
            exit 1
          else
            echo "✅ All required secrets and variables are present!"
          fi
